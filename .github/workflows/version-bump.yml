---

name: Draft release
run-name: Draft release

on:
  workflow_dispatch:
    inputs:
      next_version:
        required: true
        type: string
        description: 'Version name'

permissions:
  contents: write

jobs:
  draft_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: 'main'
          ssh-key: ${{ secrets.VERSION_BUMP }}

      - name: Configure git
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Extract current version
        run: |
          git switch main
          echo "MAJOR_VERSION=$(jq -r '.version | split(".") | .[0]' version.json)" >> $GITHUB_OUTPUT
        id: version

      - name: Bump next version
        run: echo "NEXT_MAJOR_VERSION=$((${{steps.version.outputs.MAJOR_VERSION}}+1")) >> $GITHUB_OUTPUT
        id: next_version

      - name: Create Release Branch
        run: |
          git switch -c release/${{ steps.version.outputs.MAJOR_VERSION }}.x
          git push --set-upstream origin release/${{ steps.version.outputs.MAJOR_VERSION }}.x

      - name: Prepare for next release
        run: |
          git switch main
          echo "${{steps.next_version.outputs.NEXT_MAJOR_VERSION}}"
          cat <<< $(jq '.version = "${{steps.next_version.outputs.NEXT_MAJOR_VERSION}}.0.0"' version.json) > version.json
          git add .
          git commit -m "prepare for next release: ${{steps.next_version.outputs.NEXT_MAJOR_VERSION}}.0.0"
          git push

      - name: Draft release
        run: gh release create ${{ steps.version.outputs.MAJOR_VERSION }}.0.0 --generate-notes --draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{steps.next_version.outputs.NEXT_MAJOR_VERSION}}.0.0